// This file is "main.dart"
import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:flutter/foundation.dart';
// ignore: depend_on_referenced_packages
import 'package:latlong2/latlong.dart';

// required: associates our `main.dart` with the code generated by Freezed
part 'recive.model.freezed.dart';
// optional: Since our Person class is serializable, we must add this line.
// But if Person was not serializable, we could skip it.
part 'recive.model.g.dart';

const article =
    "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.";

const categoryImage =
    'https://unsplash.com/photos/kX012NDcCKQ/download?ixid=M3wxMjA3fDB8MXxzZWFyY2h8MTN8fHZhbmNvdXZlcnxlbnwwfHx8fDE2OTI0NzI1NzZ8MA&force=true&w=640';

const eventImage =
    'https://unsplash.com/photos/ZhQCZjr9fHo/download?ixid=M3wxMjA3fDB8MXxzZWFyY2h8MXx8dmFuY291dmVyJTIwZXZlbnR8ZW58MHx8fHwxNjkyNDc0MDY3fDA&force=true&w=1920';

final points = <LatLng>[
  const LatLng(37.725834, -122.416417),
  const LatLng(37.785834, -122.416417),
  const LatLng(37.785834, -122.426417),
  const LatLng(37.755834, -122.406417),
  const LatLng(37.715834, -122.416417),
  const LatLng(37.731834, -122.436417),
  const LatLng(37.742834, -122.426417),
];

enum DifficultyLevel { easy, intermediate, advanced }

@freezed
class Recive with _$Recive {
  const factory Recive({
    required String title,
    required CreatorSummary creatorSummary,
    required Origin origin,
    required List<Ingredient> ingredients,
    required List<InstructionStep> instructions,
    required DifficultyLevel difficultyLevel,
    required int preparationTimeMinute,
    required int cookingTimeMinute,
    required String serving,
    required String cuisineType,
    required int calories,
    required List<String> imageUrls,
    required List<String> tags,
    required List<Allergen> allergens,
    required String source,
    required List<String> variations,
  }) = _Recive;

  factory Recive.fromJson(Map<String, Object?> json) => _$ReciveFromJson(json);
}

@freezed
class Allergen with _$Allergen {
  const factory Allergen({
    required String name,
    required String infoLink,
  }) = _Allergen;
  factory Allergen.fromJson(Map<String, Object?> json) =>
      _$AllergenFromJson(json);
}

@freezed
class Ingredient with _$Ingredient {
  const factory Ingredient({
    required double amount,
    required String measurement,
    required String svgIcon,
    required String name,
  }) = _Ingredient;
  factory Ingredient.fromJson(Map<String, Object?> json) =>
      _$IngredientFromJson(json);
}

@freezed
class InstructionStep with _$InstructionStep {
  const factory InstructionStep({
    required String name,
    required String description,
    required int preparationTimeMinute,
    required List<String> imageUrls,
  }) = _InstructionStep;
  factory InstructionStep.fromJson(Map<String, Object?> json) =>
      _$InstructionStepFromJson(json);
}

@freezed
class CreatorSummary with _$CreatorSummary {
  const factory CreatorSummary({
    required String firstName,
    required String lastName,
    required String imageUrl,
  }) = _CreatorSummary;
  factory CreatorSummary.fromJson(Map<String, Object?> json) =>
      _$CreatorSummaryFromJson(json);
}

@freezed
class Origin with _$Origin {
  const factory Origin({
    required String code,
    required String country,
    required String state,
    required String city,
    required String title,
  }) = _Origin;

  factory Origin.fromJson(Map<String, Object?> json) => _$OriginFromJson(json);
}

final recive = Recive.fromJson({
  "title": "Classic Chocolate Chip Cookies",
  "creatorSummary": {
    "firstName": "Mita",
    "lastName": "Takashi",
    "imageUrl":
        "https://unsplash.com/photos/I7A_pHLcQK8/download?ixid=M3wxMjA3fDB8MXxzZWFyY2h8M3x8YnVyZ2VyfGVufDB8fHx8MTY4NTMwODcyMnww&force=true&w=1920",
  },
  "origin": {
    "code": "KR",
    "country": "Korea",
    "state": "Areso",
    "city": "Seol",
    "title": "Korean"
  },
  "ingredients": [
    {
      "amount": 2,
      "measurement": "cups",
      "svgIcon": "flour_icon.svg",
      "name": "All-purpose flour"
    },
    {
      "amount": 1,
      "measurement": "cup",
      "svgIcon": "sugar_icon.svg",
      "name": "Granulated sugar"
    },
    {
      "amount": 1,
      "measurement": "cup",
      "svgIcon": "butter_icon.svg",
      "name": "Unsalted butter"
    },
  ],
  "instructions": [
    {
      "name": "Preparation",
      "description": "Preheat the oven...",
      "preparationTimeMinute": 15,
      "imageUrls": ["preparation_step1.jpg", "preparation_step2.jpg"]
    },
    {
      "name": "Baking",
      "description": "Scoop cookie dough...",
      "preparationTimeMinute": 10,
      "imageUrls": ["baking_step1.jpg", "baking_step2.jpg", "baking_step3.jpg"]
    },
  ],
  "difficultyLevel": "easy",
  "preparationTimeMinute": 30,
  "cookingTimeMinute": 10,
  "serving": "24 piece",
  "cuisineType": "Dessert",
  "calories": 150,
  "imageUrls": [
    "https://unsplash.com/photos/I7A_pHLcQK8/download?ixid=M3wxMjA3fDB8MXxzZWFyY2h8M3x8YnVyZ2VyfGVufDB8fHx8MTY4NTMwODcyMnww&force=true&w=1920",
    "https://unsplash.com/photos/MqT0asuoIcU/download?ixid=M3wxMjA3fDB8MXxzZWFyY2h8OHx8Zm9vZHxlbnwwfHx8fDE2ODU0MTcyNTN8MA&force=true&w=1920",
    "https://unsplash.com/photos/ZuIDLSz3XLg/download?ixid=M3wxMjA3fDB8MXxzZWFyY2h8Nnx8Zm9vZHxlbnwwfHx8fDE2ODU0MTcyNTN8MA&force=true&w=1920",
    "https://unsplash.com/photos/IGfIGP5ONV0/download?ixid=M3wxMjA3fDB8MXxzZWFyY2h8MTF8fGZvb2R8ZW58MHx8fHwxNjg1NDE3MjUzfDA&force=true&w=1920"
  ],
  "tags": ["Classic", "Cookies", "Dessert"],
  "allergens": [
    {"name": "Milk", "infoLink": "https://example.com/allergens/milk"},
    {"name": "Eggs", "infoLink": "https://example.com/allergens/eggs"}
  ],
  "source": "The Baker's Cookbook",
  "variations": ["Oatmeal Raisin", "Double Chocolate"]
});

final List<String> list = List.generate(20, (index) => "Text $index");
